#PROGRAM: CONVERT HEXADECIMAL TO DECIMAL

.data
				 prompt: .asciiz "Enter a Hexadecimal Value: \n"
				 output1: .asciiz "The Decimal Value of " 
				 output2: .asciiz " is " 
				 invalid: .asciiz "Invalid Hexadecimal Number\n"
				 buffer: .space 4

.text
main:
				 #t0 - holds user input (hexadecimal)
				 #t1 - holds temporary decimal value throughout the program
				 #t2 - loop counter
				 #s0 - holds the final decimal value
				 #s1 - holds length of string

				 #get hexadecimal value
				 la $a0, prompt           #address of string to print 
				 li $v0, 4                #system call code for printing string = 4
				 syscall

				 li $v0, 8                #system call code for reading string = 8
				 la $a0, buffer
				 la $a0, buffer           #load byte space into address
				 li $a1, 4                #allot the byte space for hexadecimal
				 move $t0, $a0					  #move hexadecimal into $t0 register
				 syscall
	
				 la $a0, $t0              #load address of hexadecimal
				 jal STRLEN               #call strlen procedure
				 addi $a1, $a0, 0         #move address of hexadecimal into $a1
				 addi $s1, $t2, 0         #move length of string into $s1
				 addi $t3, $zero, 8       #initialize $t3 to 8
				 ble $s1, $t3, IF         #if string length less than or equal to 8 branch to IF
				 bgt $s1, $t3, ELSE       #if string length greater than 8 branch to ELSE
        
  IF:   
         sub $t5, $s2, 1
  			 li $s3, $t5              #holds length of string - 1
  			 li $t2, 0								#loop counter
  			 li $t4, '0'
  			 li $t5, '9'
  			 li $t6, 'a'
  			 li $t7, 'f'
  			 li $t8, 'A'
  			 li $t9, 'F'
  			 
  FORLOOP:
            beq $t2, $s4, END     #if counter equals string length - 1 end loop
            lb $t3, 0($a1)        #load the next character into t3
            bge $t3, $t4, AND
  AND:      ble $t3, $t5, LABEL1
            bge $t3, $t6, NEXT
  NEXT:			ble $t3, $t7, LABEL2
  					bge $t3, $t8, GO
  GO:       ble $t3, $t9, LABEL3
            j ELSE
            addi $a1, $a1, 1      #increment the string pointer
            addi $t2, $t2, 1      #increment counter
            j FORLOOP
  
  LABEL1:   
  
	ELSE:  
	       la $a0, invalid          #address of string to print
         li $v0, 4								#system call code for printing string = 4
         syscall      
	
	STRLEN: 
					li $t2, 0			          #initialize count to 0
	WHILELOOP:   
					    lb $t4, 0($a0)          #load the next character into t4
							beq $t4, $zero, EXIT    #exit loop if character is null
							addi $a0, $a0, 1        #increment the string pointer
							addi $t2, $t0, 1        #increment the count
						  j WHILELOOP             #return to the top of the loop
						  
	EXIT:
	        jr $ra
	
	
	PRINT:  
					la $a0, output1         #address of string to print
          li $v0, 4								#system call code for printing string = 4
          syscall

          la $a0, buffer          #reload byte space to primary address
          move $a0, $t0           #primary address = t1 address (load pointer)
          li $v0, 4               #system call code for printing string = 4
          syscall
        
          la $a0, output2         #address of string to print
          li $v0, 4								#system call code for printing string = 4
          syscall
	
				  la $a0, buffer          #reload byte space to primary address
          move $a0, $t1           #primary address = t1 address (load pointer)
          li $v0, 1               #system call code for printing integer = 1
          syscall

